#!/usr/bin/env bash
set -eo pipefail; [[ $DOKKU_TRACE ]] && set -x
source "$PLUGIN_CORE_AVAILABLE_PATH/common/functions"

print_dokku_scale_file() {
  local APP="$1"; local DOKKU_SCALE_FILE="$DOKKU_ROOT/$APP/DOKKU_SCALE"
  while read line || [[ -n "$line" ]]; do
    dokku_log_info2_quiet "$line"
  done < "$DOKKU_SCALE_FILE"
}

generate_scale_file() {
  local APP="$1"; local IMAGE_TAG="$3"; local IMAGE=$(get_app_image_name $APP $IMAGE_TAG); local DOKKU_SCALE_FILE="$DOKKU_ROOT/$APP/DOKKU_SCALE"
  verify_app_name "$APP"

  copy_from_image "$IMAGE" "/app/DOKKU_SCALE" "$DOKKU_ROOT/$APP" 2>/dev/null || true
  if [[ ! -f $DOKKU_SCALE_FILE ]]; then
    dokku_log_info1_quiet "DOKKU_SCALE file not found in app image. Generating one based on Procfile..."

    TMP_WORK_DIR=$(mktemp -d)
    trap 'rm -rf "$TMP_WORK_DIR" > /dev/null' RETURN

    copy_from_image "$IMAGE" "/app/Procfile" "$TMP_WORK_DIR" 2>/dev/null || true
    copy_from_image "$IMAGE" "/opt/Procfile.compose" "$TMP_WORK_DIR" 2>/dev/null || true
    local PROCFILE="$TMP_WORK_DIR/Procfile"
    local COMPOSE_PROCFILE="$TMP_WORK_DIR/Procfile.compose"
    if [[ ! -e "$PROCFILE" ]] && [[ ! -e "$COMPOSE_PROCFILE" ]]; then
      echo "web=1" >> $DOKKU_SCALE_FILE
    else
      DOKKU_PROCFILE="$PROCFILE"
      [[ -e "$COMPOSE_PROCFILE" ]] && DOKKU_PROCFILE="$COMPOSE_PROCFILE"
      while read line || [[ -n "$line" ]]; do
        [[ -z "$line" ]] && continue
        NAME=${line%%:*}
        NUM_PROCS=0
        [[ "$NAME" == "web" ]] && NUM_PROCS=1
        echo "$NAME=$NUM_PROCS" >> $DOKKU_SCALE_FILE
      done < "$DOKKU_PROCFILE"
    fi
    dokku_log_info1_quiet "New DOKKU_SCALE file generated"
  else
    dokku_log_info1_quiet "DOKKU_SCALE file found"
  fi
  print_dokku_scale_file $APP
}

set_scale() {
  local APP="$1"; local DOKKU_SCALE_FILE="$DOKKU_ROOT/$APP/DOKKU_SCALE"
  shift 1
  local SCALE_SETTINGS=("$@")
  for procscale in "${SCALE_SETTINGS[@]}"; do
    PROC_NAME=${procscale%%=*}
    PROC_COUNT=${procscale#*=}
    is_number $PROC_COUNT || dokku_log_fail "ps:scale $PROC_COUNT is not a number"
    dokku_log_info1_quiet "Scaling $APP:$PROC_NAME to $PROC_COUNT"
    if (egrep -q ^${PROC_NAME}= $DOKKU_SCALE_FILE > /dev/null 2>&1); then
      sed --in-place "s:^${PROC_NAME}=.*:$PROC_NAME=$PROC_COUNT:g" $DOKKU_SCALE_FILE
    else
      echo "$PROC_NAME=$PROC_COUNT" >> $DOKKU_SCALE_FILE
    fi
  done
}
